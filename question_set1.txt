***1st variant:(Time complexity)
---------------------------------------------
1.For a given function g(n), we denote by O(g(n)) the set of functions-
A)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= g(n) <= c*f(n) for all n>= n0}

B)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= g(n) <= c*f(n) for all n<= n0}

C)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= f(n) <= c*g(n) for all n>= n0}

D)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= f(n) <= c*g(n) for all n<= n0}

Correct Answer: c

2.For a given function g(n), we denote by Omega(g(n)) the set of functions-
A)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c+g(n) <= f(n)  for all n>= n0}

B)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c+g(n) <= f(n) for all n<= n0}

C)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c*g(n) <= f(n) for all n>= n0}

D)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c*g(n) <= f(n) for all n<= n0}

Correct Answer: c

3.For a given function g(n), we denote by Theta(g(n)) the set of functions-
A)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c1+g(n) <= f(n) <= c2+g(n)  for all n>= n0}

B)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c1+g(n) <= f(n) <= c2+g(n) for all n<= n0}

C)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c1*g(n) <= f(n)<= c2*g(n) for all n>= n0}

D)O(g(n))={f(n): there exists positive constants c and n0 such that 
    0<= c1*g(n) <= f(n)<= c2*g(n) for all n<= n0}

Correct Answer: c

***2nd variant:(properties of data structures)
-----------------------------------------------------------------------------------

1. The 2 dimensional array(Matrix) is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:C

2.The 1 dimensional array(vector) is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:c

3.The stack is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:B

4.The queue is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:b

5.The linked list is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:B

6.The table is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:D

7.The tree is

A.) dynamic and hiearchical data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:A

8.The set is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and without structure data structure.

answer:D

9.The multi-set is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and without structure data structure.

answer:D

10.The sparce tree is

A.) static and sequential data structure.
B.) dynamic and sequential data structure.
C.) static and associative data structure.
D.) dynamic and associative data structure.

answer:C


***3rd variant:(tree,table and linked lists)
------------------------------------------------------------------------------------

1.For self ordering table we can use-
A)linked representation and serial search
B)linked representation and binary search
C)continuous representation and serial search
D)continuous representation and serial search

answer:a

2.We cannot construct original binary tree from-
A)preorder,inorder and post order traversal
B)preorder and post order traversal
C)inorder traversal
D)None of them

answer:A

3.We can construct expression tree from -
A)prefix,Infix and postfix expression
B)prefix and postfix expression
C)infix expression
D)None of them
answer:B

4.The binary-search-tree property allows us to print out all the
keys in a binary search tree in sorted order by a simple recursive
algorithm, called
A. preorder tree walk
B. inorder tree walk
C. postorder tree walk

answer:B

5. The average-case time of searching in a hash-table is
A.) O(log n)
B.) O(n)
C.) O(n*n)
D.) O(1)

answer:D

6. The average-case time of searching in a linked list is:
A. O(log n)
B. O(n)
C. O(n2)
D. O(1)

answer:B




*** 3rd variant(Red-Black and B-tree)
-------------------------------------------------------------------------------------

1.A red-black tree with n internal nodes has height at most
A)log2(n)
B)2âˆ—log2(n)
C)log2(n+1)
D)2*log2(n+1)

answer:d


2.For each node of a red-black tree, all simple paths from the node to descendant leaves

A.) contain the same number of black nodes.
B.) contain the same number of red nodes.
C.) contain different number of black nodes.
D.) contain different number of red nodes.
answer:A

